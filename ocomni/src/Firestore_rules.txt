rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /listings/(listing) {
      allow read;
      allow create: if request.auth != null && request.resource.data.imgUrls.size() < 7;
    	allow delete: if resource.data.userRef == request.auth.uid;
      allow update: if resource.data.userRef == request.auth.uid;
    }
    
    // Users
    match /users/{user} {
    allow read;
    allow create;
    allow update: if request.auth.uid == user
    }
  }
}

// Storage rules

rules_version = '2';
service firebase.storage {
match /b/{bucket}/o {
match /{allPaths=**} {
allow read;
allow write: if
request.auth != null &&
request.resource.size < 2 * 1024 * 1024 && //2MB
request.resource.contentType.matches('image/.*')
}
}
}


// white listed user rules
match /users/{userId.whitelist}/{whitelistFolder}/{whitelistFile('s)} {
  allow read: if request.auth.whitelisted == userId
}







//FireStore rules


rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /blogs/(blog) {
      allow read
      
    }
    
    // Users
    match/admins/{admin}{
    //TODO: Admin list goes here
    	allow read, create, write, update: if request.auth.uid == admin.uid
    }
     match /whitelist/{whitelisted} {
         // TODO: whitelisted users who are allowed to view their website go here
				 allow read
         match /blacklist/{blacklisted} {
            // TODO: blacklisted users who have an account but no website go here
            
         }
     }
  }
}
